<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>texture_set_interpolation(false);

x=0;  var i=x;  var m=0;//lr
y=0;  var j=y;  var n=0;//ud
 
var edgeBuffer = 16;
var a;  a[1]=16;  a[0]=-16;//edge wobble
var s=1;//wobbler


//build map
while(j&lt;room_height+edgeBuffer){//go right untill edge
    while(i&lt;room_width+edgeBuffer){//go down untill edge
        current = instance_create(i,j,oTile);
        current.name = '(' + string(m)+', '+string(n) + ')';           //debug name
        current.depthMod = 100-n;
        tileMap[m,n] = current;
        i+=32;
        m++;
    }
    x+=a[s]; s=1-s; i=x; 
    y+=24; j=y;
    n++;
    m= floor((n+1)/2);
}//map built


//kill walls
m=0;n=0;
while(n&lt;32){//left
    with(tileMap[m,n]){
        instance_destroy();
    }
    tileMap[m,n] = noone;
    n++;
    m= floor((n+1)/2);
}
while(m&lt;=48){//bottem
    with(tileMap[m,n]){
        instance_destroy();
    }
    tileMap[m,n] = noone;
    m++;
}
m=1;n=0;
while(m&lt;32){//top
    with(tileMap[m,n]){
        instance_destroy();
    }
    tileMap[m,n] = noone;
    m++;
}

while(n&lt;32){//right
    with(tileMap[m,n]){
        instance_destroy();
    }
    tileMap[m,n] = noone;
    n++;
    m= 32+floor(n/2);
}//walls killed

//get to know your neighbors
x=48;  var i=x;  var m=2;//lr
y=24;  var j=y;  var n=1;//ud
s=0;
while(j&lt;room_height-edgeBuffer){//go right untill edge
    while(i&lt;room_width-edgeBuffer){//go down untill edge
        current = tileMap[m,n];
        var edgeCount = 0;
        
        
        //5
        if(tileMap[m-1,n-1]!=noone){//r  upper left
            current.neighbor[edgeCount]=tileMap[m-1,n-1];
            //current.name+='r';
            edgeCount++;
        }//else{current.neighbor[]=noone;}
        //4
        if(tileMap[m-1,n]!=noone){//d  left
            current.neighbor[edgeCount]=tileMap[m-1,n];
            //current.name+='d';
            edgeCount++;
        }//else{current.neighbor[]=noone;} 
        //3
        if(tileMap[m,n+1]!=noone){//c  lower left
            current.neighbor[edgeCount]=tileMap[m,n+1];
            //current.name+='c';
            edgeCount++;
        }//else{current.neighbor[]=noone;}
        //2
        if(tileMap[m+1,n+1]!=noone){//v  lower right
            current.neighbor[edgeCount]=tileMap[m+1,n+1];
            //current.name+='v';
            edgeCount++;
        }//else{current.neighbor[]=noone;}
        //1
        if(tileMap[m+1,n]!=noone){//g  right
            current.neighbor[edgeCount]=tileMap[m+1,n];
            //current.name+='g';
            edgeCount++;
        }//else{current.neighbor[]=noone;}
        //0
        if(tileMap[m,n-1]!=noone){//t  upper right
            current.neighbor[edgeCount]=tileMap[m,n-1];
            //current.name+='t';
            edgeCount++;
        }//else{current.neighbor[]=noone;}
        
        //current.name+=' '+string(edgeCount);

        current.image_blend = c_red;
        i+=32;
        m++;
    }
    
    x+=a[s]; s=1-s; i=x; 
    y+=24; j=y;
    n++;
    m= 1+floor((n+1)/2)
}

global.playerDudes = ds_list_create();
global.enemyDudes = ds_list_create();


//add toon
create_instance(4,4,oUmbra,0);
create_instance(5,2,oNeco,0);
create_instance(6,6,oTheRock,0);
create_instance(22,14,oSassin,1);
create_instance(21,15,oOrior,1);
create_instance(19,12,oIshmen,1);
create_instance(21,12,oEdd,1);

create_instance(20,11,oWall,2);
create_instance(19,11,oWall,2);
create_instance(18,11,oWall,2);
create_instance(18,12,oWall,2);
create_instance(20,15,oWall,2);


for(var a=9; a&lt;25; a++){
    create_instance(a,16,oWall,2);
}

create_instance(16,1,oWall,2);
var b = 2;
for(var a=17; a&lt;24; a++){
    create_instance(a,b,oWall,2);
    b++;
    create_instance(a,b,oWall,2);
    b++;
}

global.selected = noone;
global.moveList = ds_list_create();
global.blocked = false; // stop click blead through
global.teleport = false;
global.previous = noone;
global.debugClick = "nothing!";
global.isBusy = false;
//global.acty = instance_create(0,0,oAnimator);
//global.actor = noone;

instance_create(0,0,oMiscBS);
instance_create(0,0,oDebug);
instance_destroy();


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
